{"version":3,"sources":["useAnimationFrame.js","AudioVisualiser.js","Radio.js","Bulky.js","Fish.js","FishTank.js","Smoke.js","MainMenu.js","serviceWorker.js","index.js"],"names":["useAnimationFrame","callback","requestRef","React","useRef","previousTimeRef","useEffect","current","requestAnimationFrame","animate","time","undefined","deltaTime","cancelAnimationFrame","AudioVisualiser","props","canvas","createRef","this","draw","audioData","height","width","context","getContext","lineWidth","fillStyle","fillRect","beginPath","randbetween","miny","maxy","Math","random","returnToBase","moveTo","map","item","index","brightness","floor","strokeStyle","y","amount","scaleY","max","min","angle","PI","getAngle","i","numsegments","segmentlength","thisdiagonallength","x","cos","sin","randomx","randomy","lineTo","stroke","ref","Component","Radio","audioref","useState","count","setCount","analyser","dataArray","useDimensions","clicked","setClicked","AudioContext","audioelement","source","createMediaElementSource","connect","destination","createAnalyser","fftSize","Uint8Array","frequencyBinCount","prevCount","console","log","getByteFrequencyData","className","onClick","play","resume","src","crossOrigin","Bulky","letterstyles","setLetterStyles","lettermod","offset","period","getSinCycleMod","lowerlimit","modifiers","tempstyles","color","transform","zIndex","style","Fish","fishinfo","xoffset","scale","colour","animpercent","speed","fishx","d","fill","FishTank","minspeed","maxspeed","numfish","N","Array","from","length","_","genSchool","aschool","afishinfo","key","Smoke","canvasRef","particles","setParticles","dx","ddx","wind","setWind","windtarget","setWindTarget","position","setPosition","setFromEvent","e","clientX","clientY","window","addEventListener","removeEventListener","useMousePosition","Number","isFinite","vx","vy","ctx","countarray","positionx","positiony","push","filter","particle","direction","windchange","aparticle","sidepush","modifier","clearRect","MainMenu","currentPage","setCurrentPage","innerDimensions","setInnerDimensions","newwidth","newheight","setInnerDimensionsFunc","daynum","prompt","opacity","aday","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7475a07.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst useAnimationFrame = callback => {\r\n    // Use useRef for mutable variables that we want to persist\r\n    // without triggering a re-render on their change\r\n    const requestRef = React.useRef();\r\n    const previousTimeRef = React.useRef();\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        const animate = time => {\r\n            if (previousTimeRef.current !== undefined) {\r\n                const deltaTime = time - previousTimeRef.current;\r\n                callback(deltaTime)\r\n            }\r\n            previousTimeRef.current = time;\r\n            requestRef.current = requestAnimationFrame(animate);\r\n        }\r\n\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n    }, []); // Make sure the effect runs only once\r\n}\r\n\r\nexport default useAnimationFrame\r\n","import React, { Component } from 'react';\r\n\r\nclass AudioVisualiser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n\r\n\r\n\r\n    draw() {\r\n        const { audioData } = this.props;\r\n        const canvas = this.canvas.current;\r\n        const height = canvas.height;\r\n        const width = canvas.width;\r\n        const context = canvas.getContext('2d');\r\n\r\n        // context.strokeStyle = '#878fc9';\r\n        // context.strokeStyle = '#FFFFFF';\r\n        context.lineWidth = 1;\r\n        context.fillStyle = \"RGBA(53, 61, 117, 0.178)\";\r\n        context.fillRect(0, 0, width, height);\r\n        context.beginPath();\r\n\r\n        const getAngle = (index) => {\r\n            return ((index + 1)/ 22) * Math.PI * 2\r\n        }\r\n\r\n        const randbetween = (miny, maxy) => {\r\n            return ((maxy - miny) * Math.random() + miny)\r\n        }\r\n\r\n        const returnToBase = () => {\r\n            context.moveTo(width / 2, height / 2);}\r\n\r\n        const scaleY = (amount, y) => {\r\n            let inverted = 300 / amount\r\n            let buffer = 300 - inverted\r\n            y -= buffer\r\n            y *= amount\r\n            return y\r\n        }\r\n\r\n        returnToBase()\r\n\r\n        // let tempaudiodata = shuffle(audioData)\r\n\r\n        audioData.map((item, index) => {\r\n            let brightness = Math.floor(((index * 255) / 22))\r\n            context.strokeStyle = \"RGBA(\" + brightness + \", 255, 255, 1)\";\r\n            const modifier = (2 ** (index / 20)) / 2\r\n            let y = (((item * modifier) / 255.0) * 300)\r\n            y = scaleY(1.2, y)\r\n            y *= 1.2\r\n            y = Math.max(0, y)\r\n            y = Math.min(300, y)\r\n            let smallestdimension = Math.min(height, width)\r\n            y *= smallestdimension / 300\r\n            returnToBase()\r\n            let angle = getAngle(index)\r\n            angle += randbetween(0, 1) - 0.5\r\n            let numsegments = Math.floor(y / 30)\r\n            let segmentlength = y / numsegments\r\n            let i\r\n            for (i = 1; i <= numsegments; i++) {\r\n                let thisdiagonallength = segmentlength * i\r\n                let x = Math.cos(angle) * thisdiagonallength\r\n                let y = Math.sin(angle) * thisdiagonallength\r\n                let randomx = randbetween(0, 20) - 5\r\n                let randomy = randbetween(0, 20) - 5\r\n                x += randomx + (width / 2)\r\n                y += randomy\r\n                y = (height / 2) - y\r\n                context.lineTo(x, y);\r\n            }\r\n        })\r\n        context.stroke();\r\n    }\r\n    render() {\r\n        return <canvas width={this.props.width} height={this.props.height} ref={this.canvas} />;\r\n    }\r\n}\r\n\r\nexport default AudioVisualiser;","import React, {useEffect, useState, useRef} from \"react\";\r\nimport './Radio.css';\r\nimport useAnimationFrame from './useAnimationFrame'\r\nimport AudioVisualiser from './AudioVisualiser';\r\nimport useDimensions from \"react-cool-dimensions\";\r\n\r\n\r\nconst Radio = () => {\r\n    const audioref = useRef()\r\n    const [count, setCount] = useState(0)\r\n    const context = useRef()\r\n    const analyser = useRef()\r\n    const dataArray = useRef()\r\n    const { ref, width, height} = useDimensions();\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        context.current = new AudioContext();\r\n        let audioelement = audioref.current\r\n        let source = context.current.createMediaElementSource(audioelement);\r\n        source.connect(context.current.destination);\r\n        analyser.current = context.current.createAnalyser();\r\n        analyser.current.fftSize = 64\r\n        dataArray.current = new Uint8Array(analyser.current.frequencyBinCount)\r\n        source.connect(analyser.current);\r\n    },[audioref])\r\n\r\n    useAnimationFrame(deltaTime => {\r\n        // Pass on a function to the setter of the state\r\n        // to make sure we always have the latest state\r\n        setCount(prevCount => (prevCount + deltaTime * 0.01))\r\n    })\r\n\r\n    const clicktochoose = () => {\r\n        setClicked(true)\r\n        let audioelement = audioref.current\r\n        audioelement.play()\r\n        context.current.resume()\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(height)\r\n    }, [height])\r\n\r\n    useEffect(() => {\r\n      if (context.current) {\r\n          analyser.current.getByteFrequencyData(dataArray.current)\r\n      }\r\n    }, [count])\r\n\r\n    return <div ref={ref} className={\"Centerer\"}>\r\n        <div className={\"RadioContainer\"}>\r\n            {\r\n                !clicked && <div onClick={clicktochoose} className={\"RadioButton\"}> PLAY </div>\r\n            }\r\n        </div>\r\n\r\n            {\r\n                dataArray.current && height > 0 && <AudioVisualiser className={\"Visualiser\"} audioData={dataArray.current} height={height} width={width}/>\r\n            }\r\n            <audio ref={audioref} src=\"https://s1.citrus3.com:8236/stream\" crossOrigin=\"anonymous\"/>\r\n    </div>\r\n};\r\n\r\nexport default Radio;","import React, {useEffect, useState} from \"react\";\r\nimport './Bulky.css';\r\nimport useAnimationFrame from './useAnimationFrame'\r\n\r\nconst Bulky = () => {\r\n    const [count, setCount] = useState(0)\r\n    const [letterstyles, setLetterStyles] = useState([])\r\n\r\n    useAnimationFrame(deltaTime => {\r\n        // Pass on a function to the setter of the state\r\n        // to make sure we always have the latest state\r\n        setCount(prevCount => (prevCount + deltaTime * 0.01))\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let period = 10\r\n        const getSinCycleMod = (period, offset) => {\r\n            // ofset from 0 to 1\r\n            return Math.sin((((count + (offset * period)) % period) / period) * 2 * Math.PI)\r\n        }\r\n        const spreadCycleMod = (cycleMod, lowerlimit, upperlimit) => {\r\n            return (cycleMod *  (upperlimit - lowerlimit)) + lowerlimit\r\n        }\r\n        const lettermod = (offset) => {\r\n            return spreadCycleMod(getSinCycleMod(period, offset), 0.99, 1.01)\r\n        }\r\n        let modifiers = [1, 1, 1, 1, 1]\r\n\r\n        if (count) {\r\n            modifiers = [0, 0.2, 0.4, 0.6, 0.8].map((offset) => {\r\n                return lettermod(offset)\r\n            })\r\n        }\r\n        let tempstyles = [\r\n            {\r\n                color: \"white\",\r\n                transform: \"translateX(15vw) scale(\" + modifiers[0] + \",\" + modifiers[1] * 2.2 + \") translateY(-10px)\",\r\n                zIndex: 1\r\n            },\r\n            {\r\n                color: \"black\",\r\n                transform: \"translateX(7vw) scale(\" + modifiers[1] + \",\" + modifiers[2] * 2.2 + \") translateY(-10px)\",\r\n                zIndex: 2\r\n            },\r\n            {\r\n                color: \"white\",\r\n                zIndex: 3,\r\n                transform: \"scale(\" + modifiers[2] + \",\" + modifiers[3] * 2.2 + \") translateY(-10px)\"\r\n            },\r\n            {\r\n                color: \"black\",\r\n                transform: \"translateX(-7vw) scale(\" + modifiers[3] + \",\" + modifiers[4] * 2.2 + \") translateY(-10px)\",\r\n                zIndex: 2\r\n            },\r\n            {\r\n                color: \"white\",\r\n                transform: \"translateX(-15vw) scale(\" + modifiers[4] + \",\" + modifiers[0] * 2.2 + \") translateY(-10px)\",\r\n                zIndex: 1\r\n            }\r\n        ]\r\n        setLetterStyles(tempstyles)\r\n    }, [count])\r\n\r\n    return <div className={'bulky'}>\r\n        <div style={letterstyles[0]} className={'bulkyletter'}>B</div>\r\n        <div style={letterstyles[1]} className={'bulkyletter'}>U</div>\r\n        <div style={letterstyles[2]} className={'bulkyletter'}>L</div>\r\n        <div style={letterstyles[3]} className={'bulkyletter'}>K</div>\r\n        <div style={letterstyles[4]} className={'bulkyletter'}>Y</div>\r\n    </div>\r\n};\r\n\r\nexport default Bulky;","import React from \"react\";\r\nimport './Fish.css';\r\n\r\nconst Fish = (props) => {\r\n    let height = props.fishinfo.height\r\n    let xoffset = props.fishinfo.xoffset;\r\n    let scale = props.fishinfo.scale\r\n    let colour = props.fishinfo.colour\r\n    let animpercent = props.animpercent\r\n    let speed = props.fishinfo.speed\r\n\r\n    let fishx = (props.width *  (((animpercent * speed) + xoffset) % (1000)) * (1/500)) - (props.width / 2)\r\n    if (props.width < 900) {\r\n        scale *= props.width / 900\r\n    }\r\n    return <g>\r\n        <path d=\"M327.1 96c-89.97 0-168.54 54.77-212.27 101.63L27.5 131.58c-12.13-9.18-30.24.6-27.14 14.66L24.54 256 .35 365.77c-3.1 14.06 15.01 23.83 27.14 14.66l87.33-66.05C158.55 361.23 237.13 416 327.1 416 464.56 416 576 288 576 256S464.56 96 327.1 96zm87.43 184c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24 13.26 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"\r\n                transform = {'translate('  + fishx + ', ' + height + ') scale(' + scale + ', ' + scale + ')'}\r\n              fill = {colour}\r\n        />\r\n    </g>\r\n\r\n};\r\n\r\nexport default Fish;","import React, {useState}  from \"react\";\r\nimport useDimensions from \"react-cool-dimensions\";\r\nimport './FishTank.css';\r\nimport Fish from './Fish';\r\nimport useAnimationFrame from './useAnimationFrame'\r\n\r\n\r\nconst FishTank = () => {\r\n    const { ref, width, height} = useDimensions();\r\n    const [count, setCount] = React.useState(0)\r\n\r\n    useAnimationFrame(deltaTime => {\r\n        // Pass on a function to the setter of the state\r\n        // to make sure we always have the latest state\r\n        setCount(prevCount => (prevCount + deltaTime * 0.01) % 1000)\r\n    })\r\n\r\n    const randbetween = (miny, maxy) => {\r\n        return ((maxy - miny) * Math.random() + miny)\r\n    }\r\n\r\n    function getRandomColor() {\r\n\r\n        return `rgba(${ ((Math.random() * 86) + 170) | 0},${ ((Math.random() * 86) + 170) | 0},${ ((Math.random() * 86) + 170) | 0},1)`\r\n    }\r\n\r\n    const genSchool =  (miny, maxy, minspeed, maxspeed, numfish) => {\r\n        const N = numfish;\r\n        const school = Array.from({length: N}, (_, index) => index + 1);\r\n\r\n        return school.map((x) => {\r\n            return {\r\n                index: x,\r\n                height: randbetween(miny, maxy),\r\n                xoffset: randbetween(0, 1000),\r\n                scale: randbetween(0.2, 0.9),\r\n                speed: randbetween(minspeed, maxspeed),\r\n                colour: getRandomColor()\r\n            };\r\n        })\r\n    }\r\n\r\n    const [aschool, setaschool] = useState(genSchool(-100, 1000, 1, 6, 50));\r\n\r\n    return <div ref={ref} className={'FishTank'}>\r\n        <svg width={width} height={height}>\r\n            {aschool.map((afishinfo) => (\r\n                <Fish key={afishinfo.index} fishinfo={afishinfo} animpercent={count} width={width}/>\r\n                ))}\r\n        </svg>\r\n    </div>\r\n};\r\n\r\nexport default FishTank;\r\n","import React, {useState, useEffect}  from \"react\";\r\nimport useDimensions from \"react-cool-dimensions\";\r\nimport useAnimationFrame from './useAnimationFrame'\r\nimport './Smoke.css';\r\n\r\nexport const useMousePosition = () => {\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = e => setPosition({ x: e.clientX, y: e.clientY });\r\n        window.addEventListener(\"mousemove\", setFromEvent);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", setFromEvent);\r\n        };\r\n    }, []);\r\n\r\n    return position;\r\n};\r\n\r\nconst Smoke = () => {\r\n    const { ref, width, height} = useDimensions();\r\n    const [count, setCount] = useState(0)\r\n    const [delta, setDelta] = useState(0)\r\n    const canvasRef = React.useRef();\r\n    const [particles, setParticles] = useState(undefined)\r\n    const [wind, setWind] = useState({x: 1, dx: 0.1, ddx: 0 })\r\n    const [windtarget, setWindTarget] = useState(1)\r\n    const position = useMousePosition()\r\n\r\n    useAnimationFrame(deltaTime => {\r\n        // Pass on a function to the setter of the state\r\n        // to make sure we always have the latest state\r\n        setCount(prevCount => (prevCount + deltaTime * 0.01))\r\n    })\r\n\r\n    useEffect(() => {\r\n        const randbetween = (miny, maxy) => {\r\n            return ((maxy - miny) * Math.random() + miny)\r\n        }\r\n        if (particles === undefined) {\r\n            if ( Number.isFinite(width) && width > 0) {\r\n                setParticles([{x: width / 2, y: height - 20, vx: 0, vy: -0.5}])\r\n            }\r\n        }\r\n        else {\r\n            const canvas = canvasRef.current\r\n            const ctx = canvas.getContext('2d')\r\n\r\n            const countarray = Array.from({length: 25}, (_, index) => index + 1);\r\n            let positionx = width /2\r\n            let positiony = height - 20\r\n            if (position.x) {\r\n                positionx = position.x\r\n                positiony = position.y\r\n            }\r\n            countarray.map(() => {particles.push({x: positionx, y: positiony, vx: 0, vy: randbetween(3, 7) * -1})})\r\n            particles.filter(particle => particle.height > 0 && particle.vy < -0.1)\r\n            if (randbetween(0, 1) < 0.07) {\r\n                let direction = 1\r\n                if (wind.x > 0) {\r\n                    direction = -1\r\n                }\r\n                setWindTarget(direction * randbetween(0, 4))\r\n                console.log(\"wind changed\")\r\n            }\r\n            let windchange = 0\r\n            if (wind.x > windtarget) {\r\n                windchange = wind.dx * -1\r\n            } else {\r\n                windchange = wind.dx\r\n            }\r\n            setWind({x: wind.x + windchange, dx: wind.dx, ddx: 0 })\r\n            setParticles(particles.map((aparticle) => {\r\n                let sidepush = (((aparticle.x - (width / 2)) * -1) / (width / 2)) * 6\r\n                let modifier = ((aparticle.y / height) ** 2)\r\n                sidepush *= modifier\r\n                return {x: aparticle.x + aparticle.vx + sidepush + wind.x, y: aparticle.y + aparticle.vy, vx: randbetween(-5, 5) * (1 - modifier), vy: aparticle.vy}\r\n            }))\r\n            ctx.clearRect(0, 0, width, height)\r\n            particles.map((aparticle) => {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = \"#FFFFFF\";\r\n                ctx.fillRect(aparticle.x, aparticle.y, 1, 1);\r\n                ctx.stroke()\r\n            })\r\n        }\r\n    }, [count])\r\n\r\n\r\n    return <div ref={ref} className={'Smoke'}>\r\n            <canvas ref={canvasRef} width={width} height={height - 10}/>\r\n    </div>\r\n};\r\n\r\nexport default Smoke;\r\n","import React, {useEffect, useState, useRef} from \"react\";\r\nimport './MainMenu.css';\r\nimport Radio from './Radio'\r\nimport Bulky from './Bulky'\r\nimport FishTank from './FishTank'\r\nimport Smoke from './Smoke'\r\nimport useDimensions from \"react-cool-dimensions\";\r\nimport Fish from \"./Fish\";\r\n\r\n\r\nconst MainMenu = () => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(\"Menu\");\r\n    const { ref, width, height} = useDimensions();\r\n    const [innerDimensions, setInnerDimensions] = useState({width: 0, height: 0})\r\n    const days = [\r\n        {\r\n            index: 1,\r\n            daynum: 28,\r\n            prompt: \" \",\r\n            opacity: \"45%\"\r\n        },\r\n        {\r\n            index: 2,\r\n            daynum: 29,\r\n            prompt: \" \",\r\n            opacity: \"45%\"\r\n        },\r\n        {\r\n            index: 3,\r\n            daynum: 30,\r\n            prompt: \" \",\r\n            opacity: \"45%\"\r\n        },\r\n        {\r\n            index: 4,\r\n            daynum: 1,\r\n            prompt: \"Fish\",\r\n            opacity: \"100%\"\r\n        },\r\n        {\r\n            index: 5,\r\n            daynum: 2,\r\n            prompt: \"Wisp\",\r\n            opacity: \"100%\"\r\n        },\r\n        {\r\n            index: 6,\r\n            daynum: 3,\r\n            prompt: \"Bulky\",\r\n            opacity: \"100%\"\r\n        },\r\n        {\r\n            index: 7,\r\n            daynum: 4,\r\n            prompt: \"Radio\",\r\n            opacity: \"100%\"\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        const setInnerDimensionsFunc = () => {\r\n            let newwidth = width\r\n            if (width > 800) {\r\n                newwidth = 800\r\n            }\r\n            let newheight = height * 0.85\r\n            if (newheight > newwidth) {\r\n                newheight = newwidth\r\n            }\r\n            setInnerDimensions({width: newwidth, height: newheight})\r\n        }\r\n        setInnerDimensionsFunc()\r\n    }, [width, currentPage, ref])\r\n\r\n\r\n\r\n\r\n    return <>\r\n    {currentPage === \"Menu\" && <div ref={ref} className='menuContainer'>\r\n        { innerDimensions.width !== 0  && <div style={{width: innerDimensions.width, height: \"100%\"}} className={\"InnerMenu\"}>\r\n                <div className={\"MenuHeader\"} style={{width: \"100%\", height: (height - innerDimensions.height) / 2}}>\r\n                    <div className={\"HeaderText\"}> A web page for each one of the Inktober prompts - so WebTober </div>\r\n                </div>\r\n                <div className={\"InnerInnerMenu\"} style={{width: innerDimensions.width - 20, height: innerDimensions.height -20}}>\r\n                    {days.map((aday) => {\r\n                        return <div className={\"DateCardOuter\"} key={aday.index} style={{opacity: aday.opacity}} onClick={() => setCurrentPage(aday.prompt)}>\r\n                            <div className={\"DateCardInner\"}>\r\n                                <div className={\"DateCardInnerInner\"}>\r\n                                    <div className={\"DateItem\"}> {aday.daynum} </div>\r\n                                </div>\r\n                                <div className={\"DateCardInnerInner\"}>\r\n                                    <div className={\"PromptItem\"}> {aday.prompt} </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        }\r\n        </div> }\r\n        {currentPage === \"Fish\" && <>\r\n            <FishTank />\r\n\r\n            </>}\r\n        {currentPage === \"Wisp\" && <>\r\n            <Smoke />\r\n\r\n        </>}\r\n        {currentPage === \"Bulky\" && <>\r\n            <Bulky />\r\n                    </>}\r\n        {currentPage === \"Radio\" && <>\r\n            <Radio />\r\n\r\n        </>}\r\n        </>\r\n};\r\n\r\nexport default MainMenu;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainMenu from './MainMenu'\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainMenu />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}